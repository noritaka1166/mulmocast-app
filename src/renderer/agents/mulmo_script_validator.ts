import { type AgentFunctionInfo, type AgentFunction } from "graphai";
import { mulmoScriptSchema } from "mulmocast/browser";

const mulmoScriptValidatorAgent: AgentFunction = ({ namedInputs }) => {
  const { arg } = namedInputs;
  const { mulmoScript } = arg;

  try {
    const jsonData = JSON.parse(mulmoScript);
    const parsed = mulmoScriptSchema.parse(jsonData);
    return {
      data: {
        script: parsed,
        isValid: true,
      },
      content: "script accepted",
    };
  } catch (error) {
    return {
      data: {
        error: error instanceof Error ? error.message : String(error),
        isValid: false,
      },
      content: ["failed.", error instanceof Error ? error.message : String(error)].join("\n\n"),
    };
  }
};

export const mulmoScriptValidatorAgentInfo: AgentFunctionInfo = {
  name: "mulmoScriptValidatorAgent",
  agent: mulmoScriptValidatorAgent,
  mock: mulmoScriptValidatorAgent,
  samples: [
    {
      params: {},
      inputs: {},
      result: {},
    },
  ],
  tools: [
    {
      type: "function",
      function: {
        name: "mulmoScriptValidatorAgent--pushScript",
        description: "Verify the mulmo script generated by prompt and push script to app",
        parameters: {
          type: "object",
          properties: {
            mulmoScript: {
              type: "string",
              description: "Mulmo script that is a json string",
            },
          },
        },
      },
    },
  ],
  description: "generate mulmo script json data from prompt messages",
  category: ["net"],
  author: "Receptron team",
  repository: "https://github.com/receptron/mulmocast-app",
  license: "MIT",
};

export default mulmoScriptValidatorAgentInfo;
